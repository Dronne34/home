(function() {

    var drupalSettings = drupalSettings || {};
    drupalSettings.path = drupalSettings.path || {};
    drupalSettings.path.baseUrl = drupalSettings.path.baseUrl || '/';
    var elements = document.querySelectorAll('[data-ihf-competitions-match-id]');
    var serverUrl = '/ihf-competitions/sse/live-scores/';
    var nids = [];
    var scoreElements = {};
    var scoreElementsTeamA = {};
    var scoreElementsTeamB = {};
    var linkElements = {};
    var timeElements = {};

    for(var i = 0; i < elements.length; i++) {
        var nid = elements[i].attributes['data-ihf-competitions-match-id'].nodeValue;
        var status = elements[i].attributes['data-ihf-competitions-match-status'].nodeValue;
        scoreElements[nid] = document.getElementById('ihf-competitions-score-' + nid);
        scoreElementsTeamA[nid] = document.getElementById('ihf-competitions-score-team-a-' + nid);
        scoreElementsTeamB[nid] = document.getElementById('ihf-competitions-score-team-b-' + nid);
        linkElements[nid] = document.getElementById('ihf-competitions-match-link-' + nid);
        timeElements[nid] = document.getElementById('ihf-competitions-match-time-' + nid);
        console.log(scoreElementsTeamB);

        if(status !== 'E') {
            nids.push(nid);
        }
    }

    if(nids.length > 0) {
        var nids_string = nids.join(',');
        if(!!window.EventSource) {
            var eventSource = new EventSource(serverUrl + nids_string);

            eventSource.onerror = function() {
                //this.close();
            };

            eventSource.addEventListener('terminate', function() {
                this.close();
            });

            for(var j = 0; j < nids.length; j++) {
                var match_nid = nids[j];
                var matchScoreEl = scoreElements[nids[j]];
                var matchScoreElA = scoreElementsTeamA[nids[j]];
                var matchScoreElB = scoreElementsTeamB[nids[j]];
                var matchLinkEl = linkElements[nids[j]];
                var matchTimeEl = timeElements[nids[j]];

                (function(matchScoreEl, matchScoreElA, matchScoreElB, matchLinkEl, matchTimeEl) {
                    eventSource.addEventListener('matchScore' + match_nid, function(e) {
                        var _data = e.data;
                        if(matchScoreEl) {
                            matchScoreEl.innerHTML = _data;
                        }
                        if(matchScoreElA || matchScoreElB) {
                            var _dataStripped = _data.replace(/<\/?[^>]+(>|$)/g, '').split('-');
                            matchScoreElA.innerHTML = _dataStripped[0] || 0;
                            matchScoreElB.innerHTML = _dataStripped[1] || 0;
                        }
                    }, false);

                    eventSource.addEventListener('matchLink' + match_nid, function(e) {
                        if(matchLinkEl) {
                            matchLinkEl.classList.remove('hidden');
                        }
                        if(matchTimeEl) {
                            matchTimeEl.classList.add('hidden');
                        }
                    }, false);
                }(matchScoreEl, matchScoreElA, matchScoreElB, matchLinkEl, matchTimeEl));
            }
        }
        else {
            var serverFbUrl = serverUrl + nids_string + '/fb';
            var sseFallback = function(xhrRequest) {
                xhrRequest.open('GET', serverFbUrl);
                xhrRequest.send();
            };
            var xhr = new XMLHttpRequest();
            xhr.addEventListener('load', function(res) {
                var resJson = JSON.parse(res.target.response);
                console.log(resJson, 'q');
                if(parseInt(res.target.status) === 200) {
                    for(var j = 0; j < nids.length; j++) {
                        var match_nid = nids[j];
                        var match_info = resJson[match_nid];
                        var matchScoreEl = scoreElements[nids[j]];
                        var matchLinkEl = linkElements[nids[j]];
                        var matchTimeEl = timeElements[nids[j]];

                        if(matchScoreEl) {
                            matchScoreEl.innerHTML = match_info.result;
                        }
                        if(match_info.showLink === true) {
                            if(matchLinkEl) {
                                matchLinkEl.classList.remove('hidden');
                            }
                            if(matchTimeEl) {
                                matchTimeEl.classList.add('hidden');
                            }
                        }
                    }
                }
                else if(parseInt(res.target.status) === 204) {
                    clearInterval(interval);
                }
            });
            var interval = setInterval(sseFallback, 30 * 1000, xhr);
        }
    }

})();
